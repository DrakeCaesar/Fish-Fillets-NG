# Process this file with autoconf to produce a configure script.
AC_INIT(Makefile.cvs)
AC_CANONICAL_TARGET

# The AM_INIT_AUTOMAKE macro tells automake the name and version number
# of the software package so it can generate rules for building a source
# archive.
AM_INIT_AUTOMAKE(fillets-ng, 0.3.0)

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB

CPPFLAGS="-I/usr/local/include $CPPFLAGS"
LIBS="-L/usr/local/lib -pthread -lm $LIBS"

###################################################
# Check for lua and define LUA_CFLAGS and LUA_LIBS

dnl ---- lua check ------------- (stolen from Stratagus)
AC_ARG_WITH(lua, 
    AC_HELP_STRING([--with-lua=PFX], [Prefix where Lua is installed]),
    LUAPFX="$withval", LUAPFX="")
if test x$LUAPFX != x ; then
    LUA_CFLAGS="-I$LUAPFX"
    LUA_LIBS="-L$LUAPFX -llua -llualib"
else
dnl Debian, and possibly other systems, include this script...
    AC_CHECK_PROGS(LUACONFIG, [lua-config lua-config50 lua-config5.0], "")
    if test x$LUACONFIG != x; then
        LUA_CFLAGS="`[$LUACONFIG --include]`"
        LUA_LIBS="`[$LUACONFIG --libs]`"
    else dnl ...otherwise, attempt to guess
        LUA_CFLAGS=""
        LUA_LIBS=""
        AC_CHECK_LIB(lua, lua_getfenv, LUA_LIBS="$LUA_LIBS -llua",
        AC_CHECK_LIB(lua50, lua_setfenv, LUA_LIBS="$LUA_LIBS -llua50",
        AC_CHECK_LIB(lua5.0, lua_setfenv, LUA_LIBS="$LUA_LIBS -llua5.0",
        [AC_MSG_ERROR([*** Lua5 is required.
         Try --with-lua=PREFIX
         You can download lua from http://www.lua.org])],
         $LUA_LIBS), $LUA_LIBS), $LUA_LIBS)
          AC_CHECK_LIB(lualib, luaopen_base, LUA_LIBS="$LUA_LIBS -llualib",
          AC_CHECK_LIB(lualib50, luaopen_base, LUA_LIBS="$LUA_LIBS -llualib50",
          AC_CHECK_LIB(lualib5.0, luaopen_base, LUA_LIBS="$LUA_LIBS -llualib5.0"
           [AC_MSG_ERROR([*** Lualib5 is required.
            You can download lua from http://www.lua.org])],
            $LUA_LIBS), $LUA_LIBS),$LUA_LIBS)
   fi
fi
AC_SUBST(LUA_CFLAGS)
AC_SUBST(LUA_LIBS)
dnl ---- end of lua check ------


###################################################
# Check for SDL, and define SDL_CFLAGS and SDL_LIBS
SDL_VERSION=1.2.0
AM_PATH_SDL($SDL_VERSION,
        :,
        AC_MSG_ERROR([*** library SDL-devel version $SDL_VERSION not found!])
)

###################################################
# Checks for C libraries.
# SDL_mixer
AC_CHECK_LIB([SDL_mixer], [Mix_OpenAudio],
             SDL_LIBS="-lSDL_mixer $SDL_LIBS",
             AC_MSG_ERROR([*** SDL_mixer-devel library not found!]),
             $SDL_CFLAGS $SDL_LIBS
)
# SDL_image
AC_CHECK_LIB([SDL_image], [IMG_Load],
             SDL_LIBS="-lSDL_image $SDL_LIBS",
             AC_MSG_ERROR([*** SDL_image-devel library not found!]),
             $SDL_CFLAGS $SDL_LIBS
)
# SDL_ttf
AC_CHECK_LIB([SDL_ttf], [TTF_OpenFont],
             SDL_LIBS="-lSDL_ttf $SDL_LIBS",
             AC_MSG_ERROR([*** SDL_ttf-devel library not found!]),
             $SDL_CFLAGS $SDL_LIBS
)

###################################################
# enable C++ language
AC_LANG(C++)

###################################################
# Checks for C++ libraries.
# boost_filesystem

AC_ARG_WITH(boost, 
    AC_HELP_STRING([--with-boost=PFX], [Prefix where boost is installed]),
    BOOSTPFX="$withval", BOOSTPFX="")
if test x$BOOSTPFX != x ; then
    BOOST_CFLAGS="-I$BOOSTPFX"
    BOOST_LIBS="-L$BOOSTPFX"
fi
OLD_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $BOOST_CFLAGS"
AC_CHECK_HEADER(boost/filesystem/path.hpp, [],
    [AC_MSG_ERROR([*** boost_filesystem-devel library not found!
                   Try --with-boost=PREFIX
                   You can download boost from http://www.boost.org])], []
)
CPPFLAGS="$OLD_CPPFLAGS"
AC_CHECK_LIB(boost_filesystem, main,
            [BOOST_LIBS="$BOOST_LIBS -lboost_filesystem"],
AC_CHECK_LIB(boost_filesystem-gcc, main,
            [BOOST_LIBS="$BOOST_LIBS -lboost_filesystem-gcc"],
AC_CHECK_LIB(boost_filesystem-mgw, main,
            [BOOST_LIBS="$BOOST_LIBS -lboost_filesystem-mgw"],
AC_CHECK_LIB(boost_filesystem-vc, main,
            [BOOST_LIBS="$BOOST_LIBS -lboost_filesystem-vc"],
AC_CHECK_LIB(boost_filesystem-osx, main,
            [BOOST_LIBS="$BOOST_LIBS -lboost_filesystem-osx"],
    [AC_MSG_ERROR([*** boost_filesystem-devel library not found!
                   You can download boost from http://www.boost.org])],
    $BOOST_LIBS), $BOOST_LIBS) $BOOST_LIBS), $BOOST_LIBS), $BOOST_LIBS)
AC_SUBST(BOOST_CFLAGS)
AC_SUBST(BOOST_LIBS)


###################################################
# Debug on/off
AC_ARG_ENABLE(debug,
              [  --enable-debug          Print debug messages],
              [case "${enableval}" in
                 yes) debug=true ;;
                 no)  debug=false ;;
                 *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
               esac],[debug=false]
               )
CXXFLAGS="$CXXFLAGS -Wall -W -Wpointer-arith -Wcast-qual \
-Wcast-align -Wmissing-prototypes -Woverloaded-virtual \
-Wconversion -Wshadow \
-Wstrict-prototypes"
if test "x$debug" = "xtrue"; then
    CXXFLAGS="$CXXFLAGS -pipe -g3 -O0"
fi

###################################################
AC_OUTPUT([
           Makefile
           src/Makefile
           src/SDL_gfx/Makefile
           src/gengine/Makefile
           src/effect/Makefile
           src/plan/Makefile
           src/level/Makefile
           src/menu/Makefile
           src/game/Makefile
           ])

